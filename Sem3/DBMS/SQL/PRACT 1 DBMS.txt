//GENERAL CODE

CREATE TABLE Persons (
    ID int,
    FirstName varchar(25),
    Address varchar(25),
    AGE int
);

DESC PERSONS;

insert into PERSONS VALUES(01,'VICKEY','KOLKATA',20);
insert into PERSONS VALUES(02,'B','DELHI',19);
insert into PERSONS VALUES(03,'C','PUNJAB',20);
UPDATE PERSONS SET FIRSTNAME='A' WHERE ID=1;
UPDATE PERSONS SET AGE=21, ADDRESS='JAIPUR' WHERE ID=3;
DELETE FROM PERSONS WHERE ID=1;

SELECT * FROM PERSONS;


CREATE TABLE STUDENTS
(
ID INT,
NAME VARCHAR(20) DEFAULT 'NONAME',
AGE INT
);

INSERT INTO STUDENTS(ID,AGE) VALUES(1,20);
INSERT INTO STUDENTS VALUES(2,'A',19);
INSERT INTO STUDENTS(NAME,AGE) VALUES('C',19);

ALTER TABLE STUDENTS MODIFY ID DEFAULT 66;

DESC STUDENTS;
ALTER TABLE STUDENTS MODIFY ID PRIMARY KEY;
ALTER TABLE STUDENTS ADD PRIMARY KEY(ID);
ALTER TABLE STUDENTS DROP PRIMARY KEY;

SELECT * FROM STUDENTS;

DROP TABLE STUDENTS;


create table studentt
(
id int,
name varchar(20) default 'noname',
age int check (age>=18 and age<40)
);

drop table studentt;

alter table studentt modify id primary key;

desc studentt;

insert into studentt(name) values('sham');

select * from studentt;

insert into studentt values(3,null);

alter table studentt add primary key(id);

alter table studentt drop constraint default(name);

alter table studentt add age int;

desc studentt;

alter table studentt add constraint CC check(age>18 and age<40);

insert into studentt(id,age) values(4,41);

select * from studentt;

alter table studentt drop constraint CC;

// FOREIGN KEY

CREATE TABLE A1
(
ID INT PRIMARY KEY,
NAME VARCHAR(20),
AGE INT
);

CREATE TABLE A2
(
ROLL_NO INT,
ADDRESS VARCHAR(20),
FOREIGN KEY(ROLL_NO) REFERENCES A1(ID)
);

INSERT INTO A1 VALUES(1,'A',20);

INSERT INTO A2 VALUES(1,'DELHI');
DESC STUDENTS;

SELECT * FROM A1;
SELECT * FROM A2;

DROP TABLE STUDENTS;

-------------------------------------------------
UPDATE EMPLOYEE SET NAME='A' WHERE EMPLOYEE_ID='5';

SELECT * FROM EMPLOYEE;
SELECT NAME, DESIGNATION FROM EMPLOYEE WHERE EXPERIENCE BETWEEN 7 AND 10;
SELECT NAME, DESIGNATION FROM EMPLOYEE WHERE EMPLOYEE_ID='3' OR EMPLOYEE_ID='5';
SELECT * FROM EMPLOYEE WHERE EMPLOYEE_ID IN('2','3','4');
SELECT * FROM EMPLOYEE WHERE EMPLOYEE_ID NOT IN('2','3','4');

SELECT EMPLOYEE_ID, NAME, SALARY FROM EMPLOYEE WHERE SALARY LIKE '28%';
SELECT EMPLOYEE_ID, NAME, SALARY FROM EMPLOYEE WHERE SALARY LIKE '%0000';
SELECT EMPLOYEE_ID, NAME, DESIGNATION FROM EMPLOYEE WHERE DESIGNATION LIKE '%ER%';

SELECT EMPLOYEE_ID, NAME, SALARY FROM EMPLOYEE WHERE SALARY LIKE '_0000';
SELECT EMPLOYEE_ID, NAME, SALARY FROM EMPLOYEE WHERE SALARY LIKE '_8%';
SELECT EMPLOYEE_ID, NAME, SALARY FROM EMPLOYEE WHERE SALARY LIKE '6__00';

SELECT * FROM EMPLOYEE ORDER BY EXPERIENCE ASC;
SELECT * FROM EMPLOYEE ORDER BY EXPERIENCE DESC;

SELECT * FROM EMPLOYEE ORDER BY 5 ASC;
SELECT * FROM EMPLOYEE ORDER BY 5, 6 ASC;


-------------------------------------------------
SELECT MAX(SALARY) FROM EMPLOYEE;
SELECT MIN(SALARY) FROM EMPLOYEE;
SELECT AVG(SALARY) FROM EMPLOYEE;
SELECT MAX(NAME) FROM EMPLOYEE;
SELECT MIN(NAME) FROM EMPLOYEE;
SELECT COUNT(*) FROM EMPLOYEE;
SELECT DISTINCT(SALARY) FROM EMPLOYEE;
SELECT COUNT(DISTINCT(SALARY)) FROM EMPLOYEE;
SELECT SUM(SALARY) FROM EMPLOYEE;
SELECT SUM(DISTINCT(SALARY)) FROM EMPLOYEE;
SELECT AVG(SALARY) FROM EMPLOYEE;
SELECT AVG(DISTINCT(SALARY)) FROM EMPLOYEE;
-------------------------------------------------
//CA 1 QUERY: 

CREATE TABLE EMPLOYEE
(
EMPLOYEE_ID VARCHAR(20),
NAME CHAR(20),
PHONE_NO NUMBER(20),
DESIGNATION VARCHAR(20),
EXPERIENCE NUMBER(10),
SALARY NUMBER(10),
LOCATION CHAR(10)
);


DELETE FROM EMPLOYEE WHERE NAME='D';
ALTER TABLE EMPLOYEE ADD CONSTRAINT PK PRIMARY KEY(EMPLOYEE_ID);

INSERT INTO EMPLOYEE VALUES(1,'A',123,'EXECUTIVE',10,90000,'DELHI');
INSERT INTO EMPLOYEE VALUES(2,'B',345,'MANAGER',7,65000,'KOLKATA');
INSERT INTO EMPLOYEE VALUES(3,'C',678,'SUPERVISOR',7,30000,'PUNJAB');
INSERT INTO EMPLOYEE VALUES(4,'D',564,'CHIEF',11,100000,'KOLKATA');
INSERT INTO EMPLOYEE VALUES(5,'E',574,'CLERK',6,28000,'DELHI');
INSERT INTO EMPLOYEE VALUES(6,'F',987,'CLERK',5,28000,'MUMBAI');

DESC EMPLOYEE;

SELECT * FROM EMPLOYEE;

SELECT NAME, SALARY FROM EMPLOYEE WHERE SALARY>40000;

SELECT NAME FROM EMPLOYEE WHERE LOCATION='DELHI';

CREATE TABLE EMP
(
EMPLOYEE_ID VARCHAR(20),
NAME CHAR(20),
SALARY NUMBER(10)
);

INSERT INTO EMP SELECT EMPLOYEE_ID,NAME,SALARY FROM EMPLOYEE;

SELECT * FROM EMP;

SELECT * FROM EMPLOYEE ORDER BY EXPERIENCE ASC;
-------------------------------------------------
CREATE TABLE ORDERS (PRODUCT VARCHAR(20), SALE (5));

INSERT INT0 ORDERS VALUES('MOUSE',200);
INSERT INTO ORDERS VALUES('MOUSE',500);
INSERT INTO ORDERS VALUES('MOUSE',400);
INSERT INTO ORDERS VALUES('MOUSE',350);

INSERT INT0 ORDERS VALUES('KEYBOARD',200);
INSERT INTO ORDERS VALUES('KEYBOARD',500);
INSERT INTO ORDERS VALUES('KEYBOARD',400);
INSERT INTO ORDERS VALUES('KEYBOARD',350);


INSERT INT0 ORDERS VALUES('CABINET',200);
INSERT INTO ORDERS VALUES('CABINET',500);
INSERT INTO ORDERS VALUES('CABINET',400);
INSERT INTO ORDERS VALUES('CABINET',350);

SELECT PRODUCT, SUM(SALE) FROM ORDERS GROUP BY PRODUCT;
SELECT PRODUCT, COUNT(*) FROM ORDERS GROUP BY PRODUCT;
select product,sum(sale) from orders group by product having sum(sale) > 4000;
SELECT PRODUCT, COUNT(*) FROM ORDERS GROUP BY PRODUCT ORDER BY PRODUCT ASC;
-------------------------------------------------
// MY CODES


DEFAULT:
1- ALTER TABLE TABLENAME MODIFY ID DEFAULT 10;
2- ALTER TABLE TABLENAME ADD CONSTRAINT DC DEFAULT

UNIQUE:
1- ALTER TABLE TABLENAME MODIFY ID UNIQUE;
2- ALTER TABLE TABLENAME ADD CONSTRAINT UC UNIQUE(ID);
1.1- ALTER TABLE TABLENAME DROP UNIQUE(ID);
2.1- ALTER TABLE TABLENAME DROP CONSTRAINT UC;


-------------------------------------------------
// DBA COMMANDS

CREATE ROLE ROLE1;
CREATE USER USER1 IDENTIFIED BY USER1 DEFAULT TABLESPACE SYSTEM QUOTA UNLIMITED ON SYSTEM;
DROP USER VICKEY CASCADE;
GRANT CREATE SESSION TO VICKEY;
GRANT CREATE TABLE TO VICKEY;
GRANT ROLE1 TO VICKEY;
GRANT ALL ON TABLENAME TO SYSTEM;
GRANT SELECT,INSERT,UPDATE,DELETE ON TABLENAME TO SYSTEM;
REVOKE CREATE TABLE FROM VICKEY;
REVOKE CREATE SESSION FROM VICKEY;
CREATE VIEW EMP_VIEW AS SELECT * FROM TABLE;
CREATE OR REPLACE VIEW EMP_VIEW AS SELECT ENO, ENAME FROM EMPLOYEE;
SELECT * FROM VIEW1;
DROP VIEW EMP_VIEW;
create or replace view employee_view as select * from employee where addres
s='chd' with check option;


// TCL COMMANDS

ROLLBACK;
SAVEPOINT SAVE_NAME;
ROLLBACK TO SAVE_NAME;
COMMIT;

------------------------------------------------
//JOIN

SELECT * FROM DEPT,EMP;
//NATURAL JOIN
SELECT ENO,ENAME,DNO,DNAME FROM EMP NATURAL JOIN DEPT;
//SELF JOIN
SELECT E1.ENO, E2.ENAME,E1.DNO FROM EMP E1,EMP E2 WHERE E1.ENO=E2.ENO;
//LEFT OUTER JOIN
SELECT ENO,ENAME,DNAME FROM EMP LEFT OUTER JOIN DEPT ON EMP.DNO=DEPT.DNO;
//RIGHT OUTER JOIN
SELECT ENO,ENAME,DNAME FROM EMP RIGHT OUTER JOIN DEPT ON EMP.DNO=DEPT.DNO;
//FULL OUTER JOIN
SELECT ENO,ENAME,DNAME FROM EMP FULL OUTER JOIN DEPT ON EMP.DNO=DEPT.DNO;
//EQUI JOIN
SELECT ENO,ENAME FROM EMP,DEPT WHERE EMP.ENAME=DEPT.DNAME;