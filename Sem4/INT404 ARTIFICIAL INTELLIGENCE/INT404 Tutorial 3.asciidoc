maxm,maxc=3,3

state_space={}
ol=[(maxm,maxc,1)]
cl=[]

"""Rules"""
while((0,0,0) not in ol):
    m,c,b=ol.pop(0)
    if(m,c,b) not in cl:
        l=[]
        state_space[(m,c,b)]=l
        
        if(m==maxm and c==maxc and b==1):
            l.append((m,c-2,0))
            ol.append((m,c-2,0))
            l.append((m-1,c-1,0))
            ol.append((m-1,c-1,0))
        if(m-c==2 and b==0):
            l.append((m,c+1,1))
            ol.append((m,c+1,1))
        if(m-c==1 and b==1):
            l.append((m,c-2,0))
            ol.append((m,c-2,0))
        if(m==maxm and c==0 and b==0):
            l.append((m,c+1,1))
            ol.append((m,c+1,1))
        if(m-c==2 and b==1):
            l.append((m-2,c,0))
            ol.append((m-2,c,0))
        if(m==1 and c==1 and b==0):
            l.append((m+1,c+1,1))
            ol.append((m+1,c+1,1))
        if(m==2 and c==2 and b==1):
            l.append((m-2,c,0))
            ol.append((m-2,c,0))
        if(m==0 and c==2 and b==0):
            l.append((m,c+1,1))
            ol.append((m,c+1,1))
        if(m==0 and c==maxc and b==1):
            l.append((m,c-2,0))
            ol.append((m,c-2,0))
        if(m==0 and c==1 and b==0):
            l.append((m,c+1,1))
            ol.append((m,c+1,1))
        if(m==0 and c==2 and b==1):
            l.append((m,c-2,0))
            ol.append((m,c-2,0))
        cl.append((m,c,b))
        
for i,j in state_space.items():
    print('node is',i,'children are',j)
print(ol,cl)            
----


+*Out[1]:*+
----
Enter missionaries or cannibles3
3 3
node is (3, 3, 1) children are [(3, 1, 0), (2, 2, 0)]
node is (3, 1, 0) children are [(3, 2, 1)]
node is (2, 2, 0) children are []
node is (3, 2, 1) children are [(3, 0, 0)]
node is (3, 0, 0) children are [(3, 1, 1)]
node is (3, 1, 1) children are [(1, 1, 0)]
node is (1, 1, 0) children are [(2, 2, 1)]
node is (2, 2, 1) children are [(0, 2, 0)]
node is (0, 2, 0) children are [(0, 3, 1)]
node is (0, 3, 1) children are [(0, 1, 0)]
node is (0, 1, 0) children are [(0, 2, 1)]
node is (0, 2, 1) children are [(0, 0, 0)]
[(0, 0, 0)] [(3, 3, 1), (3, 1, 0), (2, 2, 0), (3, 2, 1), (3, 0, 0), (3, 1, 1), (1, 1, 0), (2, 2, 1), (0, 2, 0), (0, 3, 1), (0, 1, 0), (0, 2, 1)]
----


+*In[ ]:*+
[source, ipython3]
----

----


+*In[ ]:*+
[source, ipython3]
----

----

